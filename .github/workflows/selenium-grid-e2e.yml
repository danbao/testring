name: E2E Tests with Docker Selenium Grid

on:
  push:
    branches: [ master, main ,selenium-grid-e2e]
    paths:
      - 'packages/e2e-test-app/**'
      - 'packages/plugin-playwright-driver/**'
      - 'packages/web-application/**'
      - 'docker/docker-selenium.yml'
      - '.github/workflows/selenium-grid-e2e.yml'
  pull_request:
    branches: [ master, main ,selenium-grid-e2e]
    paths:
      - 'packages/e2e-test-app/**'
      - 'packages/plugin-playwright-driver/**'
      - 'packages/web-application/**'
      - 'docker/docker-selenium.yml'
      - '.github/workflows/selenium-grid-e2e.yml'
  workflow_dispatch:  # 允许手动触发

jobs:
  selenium-grid-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Check Docker Environment
      run: |
        echo "🔍 Checking Docker environment..."
        docker --version
        docker compose version
        docker info
        docker system info | grep -E "(Server Version|Operating System|Architecture)" || true

    - name: Start Docker Selenium Grid
      run: |
        echo "🚀 Starting Selenium Grid with Docker Compose..."
        cd docker
        docker compose -f docker-selenium.yml up -d
        echo "✅ Selenium Grid containers started"

    - name: Wait for Selenium Grid to be ready
      run: |
        echo "⏳ Waiting for Selenium Grid to be ready..."
        timeout=300  # 5 minutes timeout
        interval=5
        elapsed=0
        
        while [ $elapsed -lt $timeout ]; do
          if curl -f http://localhost:4444/wd/hub/status >/dev/null 2>&1; then
            echo "✅ Selenium Grid is ready!"
            break
          fi
          echo "Waiting for Grid... (${elapsed}s/${timeout}s)"
          sleep $interval
          elapsed=$((elapsed + interval))
        done
        
        if [ $elapsed -ge $timeout ]; then
          echo "❌ Timeout waiting for Selenium Grid"
          echo "Docker containers status:"
          docker ps
          echo "Docker logs - Selenium Hub:"
          docker logs selenium-hub-grid4
          echo "Docker logs - Chrome node:"
          docker logs $(docker ps -q --filter "ancestor=selenium/node-chrome:latest")
          exit 1
        fi

    - name: Verify Grid nodes
      run: |
        echo "🔍 Checking Grid nodes..."
        chmod +x scripts/check-selenium-grid.sh
        ./scripts/check-selenium-grid.sh

    - name: Run E2E tests with Selenium Grid
      run: |
        echo "🧪 Running E2E tests with Selenium Grid..."
        export SELENIUM_GRID_URL=http://localhost:4444/wd/hub
        npm run test:e2e:grid
      env:
        CI: true
        # 设置测试超时
        TESTRING_TEST_TIMEOUT: 120000
        # 禁用 headless 模式在 Grid 中不需要
        TESTRING_HEADLESS: false

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: selenium-grid-test-results
        path: |
          packages/e2e-test-app/_tmp/
          packages/e2e-test-app/test-results/
          packages/e2e-test-app/playwright-report/
        retention-days: 7

    - name: Upload test screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: selenium-grid-test-screenshots
        path: packages/e2e-test-app/_tmp/**/*.png
        retention-days: 7

    - name: Display Grid logs on failure
      if: failure()
      run: |
        echo "🔍 Selenium Hub logs:"
        docker logs selenium-hub-grid4 || echo "No hub logs available"
        
        echo "🔍 Chrome node logs:"
        docker logs $(docker ps -q --filter "ancestor=selenium/node-chrome:") || echo "No chrome node logs available"

    - name: Cleanup Docker containers
      if: always()
      run: |
        echo "🧹 Cleaning up Docker containers..."
        cd docker
        docker compose -f docker-selenium.yml down -v
        echo "✅ Cleanup completed"

    - name: Display final status
      if: always()
      run: |
        echo "📊 Test execution completed"
        echo "Docker containers after cleanup:"
        docker ps -a --filter "label=com.docker.compose.project=docker" 